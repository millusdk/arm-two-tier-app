{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "0.5.0.0",
  "parameters": {
    "addServer": {
      "type": "object"
    },
    "admin": {
      "type": "secureObject"
    },
    "vnet": {
      "type": "object"
    },
    "_artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/millusdk/Arm-two-tier-app/master"
    }
  },
  "variables": {
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "sku": {
        "name": "[parameters('addServer').storage.type]",
        "tier": "[parameters('addServer').storage.sku]"
      },
      "kind": "Storage",
      "name": "[replace(parameters('addServer').name, '-', '')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "addServerStorage"
      },
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "[parameters('addServer').availabilitySet.name]",
      "type": "Microsoft.Compute/availabilitySets",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "addAvailabilitySet"
      },
      "properties": {
        "platformUpdateDomainCount": "[parameters('addServer').availabilitySet.updateDomainCount]",
        "platformFaultDomainCount": "[parameters('addServer').availabilitySet.faultDomainCount]"
      }
    },
    {
      "name": "[parameters('addServer').ip.name]",
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [],
      "tags": {
        "displayName": "addServerIp"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[parameters('addServer').name]"
        }
      }
    },
    {
      "name": "[parameters('addServer').nic.name]",
      "type": "Microsoft.Network/networkInterfaces",
      "location": "[resourceGroup().location]",
      "apiVersion": "2016-03-30",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', parameters('addServer').ip.name)]"
      ],
      "tags": {
        "displayName": "addNetworkInterface"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[parameters('addServer').ip.private]",
              "subnet": {
                "id": "[parameters('vnet').subnets.lan.ref]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('addServer').ip.name)]"
              }
            }
          }
        ],
        "dnsSettings": {
          "dnsServers": [
            "8.8.8.8",
            "8.8.4.4"
          ]
        }
      }
    },
    {
      "name": "[parameters('addServer').name]",
      "type": "Microsoft.Compute/virtualMachines",
      "location": "[resourceGroup().location]",
      "apiVersion": "2015-06-15",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', replace(parameters('addServer').name, '-', ''))]",
        "[resourceId('Microsoft.Network/networkInterfaces', parameters('addServer').nic.name)]",
        "[resourceId('Microsoft.Compute/availabilitySets', parameters('addServer').availabilitySet.name)]"
      ],
      "tags": {
        "displayName": "addServer"
      },
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('addServer').availabilitySet.name)]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('addServer').vmSize]"
        },
        "osProfile": {
          "computerName": "[parameters('addServer').name]",
          "adminUsername": "[parameters('admin').username]",
          "adminPassword": "[parameters('admin').password]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('addServer').image.publisher]",
            "offer": "[parameters('addServer').image.offer]",
            "sku": "[parameters('addServer').image.osVersion]",
            "version": "latest"
          },
          "osDisk": {
            "name": "[parameters('addServer').disks.os.name]",
            "vhd": {
              "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', replace(parameters('addServer').name, '-', '')), '2016-01-01').primaryEndpoints.blob, parameters('addServer').storage.containerName, '/', parameters('addServer').disks.os.name, '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "[parameters('addServer').disks.os.size]"
          },
          "dataDisks": [
            {
              "name": "[parameters('addServer').disks.data.name]",
              "vhd": {
                "uri": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', replace(parameters('addServer').name, '-', '')), '2016-01-01').primaryEndpoints.blob, parameters('addServer').storage.containerName, '/', parameters('addServer').disks.data.name, '.vhd')]"
              },
              "caching": "None",
              "createOption": "Empty",
              "diskSizeGB": "[parameters('addServer').disks.data.size]",
              "lun": 0
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('addServer').nic.name)]"
            }
          ]
        }
      },

      "resources": [
        {
          "name": "CreateADForest",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2015-06-15",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', parameters('addServer').name)]"
          ],
          "tags": {
            "displayName": "CreateADForest"
          },
          "properties": {
            "publisher": "Microsoft.Powershell",
            "type": "DSC",
            "typeHandlerVersion": "2.9",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "configuration": {
                "url": "[concat(parameters('_artifactsLocation'), '/DSC/CreateADPDC.zip')]",
                "script": "CreateADPDC.ps1",
                "function": "CreateADPDC"
              },
              "configurationArguments": {
                "DomainName": "[parameters('admin').domain]",
                "AdminCreds": {
                  "UserName": "[parameters('admin').username]",
                  "Password": "PrivateSettingsRef:AdminPassword"
                }
              }
            },
            "protectedSettings": {
              "AdminPassword": "[parameters('admin').password]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
  }
}
